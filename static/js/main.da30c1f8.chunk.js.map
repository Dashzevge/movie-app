{"version":3,"sources":["redux/slices/movieDetailSlice.js","redux/slices/moviesSlice.js","redux/slices/genresSlice.js","redux/slices/paginationSlice.js","redux/slices/searchSlice.js","middleware/apiClient.js","services/movieApi.js","store/Store.js","compenents/Loading.js","App.js","index.js","constants.js"],"names":["fetchMovieDetails","createAsyncThunk","async","getMovieDetailsById","API_ENDPOINTS","MOVIES","id","movieDetailSlice","createSlice","name","initialState","movie","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","moviesSlice","setMovies","actions","genresSlice","setGenres","paginationSlice","currentPage","INITIAL_PAGE","pageSize","INITIAL_PAGE_SIZE","totalPages","INITIAL_TOTAL","setPage","setPageSize","setTotalPages","searchSlice","searchTerm","selectedGenre","setSearchTerm","setSelectedGenre","apiClient","axios","create","baseURL","BASE_URL","interceptors","request","use","config","TOKEN","headers","Authorization","Promise","reject","getAllMovies","url","page","limit","search","genre","get","data","console","getAllGenres","store","configureStore","reducer","movieDetail","movieDetailReducer","movies","moviesReducer","genres","genresReducer","pagination","paginationReducer","searchReducer","Loading","React","createElement","Home","lazy","MovieDetail","NotFound","App","Router","basename","BASE_NAME","Suspense","fallback","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","Provider","GENRES","process","NO_IMAGE"],"mappings":"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","file":"static/js/main.da30c1f8.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getMovieDetailsById } from '../../services/movieApi';\nimport { API_ENDPOINTS } from '../../constants';\n\nexport const fetchMovieDetails = createAsyncThunk(\n  'movieDetail/fetchMovieDetails',\n  async (id) => {\n    const response = await getMovieDetailsById(API_ENDPOINTS.MOVIES, id);\n    return response;\n  }\n);\n\nconst movieDetailSlice = createSlice({\n  name: 'movieDetail',\n  initialState: {\n    movie: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMovieDetails.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchMovieDetails.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.movie = action.payload;\n      })\n      .addCase(fetchMovieDetails.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default movieDetailSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst moviesSlice = createSlice({\n  name: 'movies',\n  initialState: [],\n  reducers: {\n    setMovies: (state, action) => action.payload,\n  },\n});\n\nexport const { setMovies } = moviesSlice.actions;\nexport default moviesSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst genresSlice = createSlice({\n  name: 'genres',\n  initialState: [],\n  reducers: {\n    setGenres: (state, action) => action.payload,\n  },\n});\n\nexport const { setGenres } = genresSlice.actions;\nexport default genresSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { INITIAL_PAGE,INITIAL_PAGE_SIZE,INITIAL_TOTAL } from '../../constants';\n\nconst paginationSlice = createSlice({\n  name: 'pagination',\n  initialState: {\n    currentPage: INITIAL_PAGE,\n    pageSize: INITIAL_PAGE_SIZE,\n    totalPages: INITIAL_TOTAL,\n  },\n  reducers: {\n    setPage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    setPageSize: (state, action) => {\n      state.pageSize = action.payload;\n      state.currentPage = 1; // Reset to first page\n    },\n    setTotalPages: (state, action) => {\n      state.totalPages = action.payload;\n    },\n  },\n});\n\nexport const { setPage, setPageSize, setTotalPages } = paginationSlice.actions;\nexport default paginationSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState: {\n    searchTerm: '',\n    selectedGenre: '',\n  },\n  reducers: {\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    setSelectedGenre: (state, action) => {\n      state.selectedGenre = action.payload;\n    },\n  },\n});\n\nexport const { setSearchTerm, setSelectedGenre } = searchSlice.actions;\nexport default searchSlice.reducer;\n","import axios from 'axios';\nimport { BASE_URL, TOKEN } from '../constants';\n\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n});\n\napiClient.interceptors.request.use(\n  (config) => {\n    if (TOKEN) {\n      config.headers.Authorization = `Bearer ${TOKEN}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient;\n","import apiClient from '../middleware/apiClient';\n\nexport const getAllMovies = async (url, page, limit, search, genre ) => {\n  try {\n    const response = await apiClient.get(`/${url}?page=${page}&limit=${limit}&search=${search}&genre=${genre}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error getAllmovies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetailsById = async (url, id) => {\n  try {\n    const response = await apiClient.get(`/${url}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details with id:' + id + '', error);\n    throw error;\n  }\n};\n\nexport const getAllGenres = async (url) => {\n  try {\n    const response = await apiClient.get(`/${url}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching genres details', error);\n    throw error;\n  }\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport movieDetailReducer from '../redux/slices/movieDetailSlice';\nimport moviesReducer from '../redux/slices/moviesSlice';\nimport genresReducer from '../redux/slices/genresSlice';\nimport paginationReducer from '../redux/slices/paginationSlice';\nimport searchReducer from '../redux/slices/searchSlice';\n\nconst store = configureStore({\n  reducer: {\n    movieDetail: movieDetailReducer,\n    movies: moviesReducer,\n    genres: genresReducer,\n    pagination: paginationReducer,\n    search: searchReducer,\n  },\n});\n\nexport default store;\n","import React from 'react'\n\nexport const Loading =() => {\n    return <p><i>Loading...</i></p>;\n}\n  ","import React, {lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Loading } from './compenents/Loading';\nimport { BASE_NAME } from './constants.js';\n\nconst Home = lazy(() => import('./pages/Home.js'));\nconst MovieDetail = lazy(() => import('./pages/MovieDetail.js'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n  return (\n    <Router basename={BASE_NAME}>\n    <Suspense fallback={<Loading />}>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/movie/:id\" element={<MovieDetail />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Suspense>\n  </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store/Store';\nimport './css/Movies.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}> \n    <App />\n  </Provider>\n);\n","export const API_ENDPOINTS = {\n    MOVIES: 'movies',\n    GENRES: 'genres/movies',\n};\nexport const BASE_NAME = process.env.PUBLIC_URL || \"/movie-app\";\nexport const BASE_URL = 'https://0kadddxyh3.execute-api.us-east-1.amazonaws.com';\nexport const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJvcGVuSnd0NCIsIm5hbWUiOiJPcGVuSldUWzRdIn0.FEyU1vuRnD1wDw2kxuks59N9paTibhKHT8U9cpFw1dM';\nexport const NO_IMAGE = 'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png';\nexport const INITIAL_TOTAL = 1;\nexport const INITIAL_PAGE = 1;\nexport const INITIAL_PAGE_SIZE = 25;\n"],"sourceRoot":""}