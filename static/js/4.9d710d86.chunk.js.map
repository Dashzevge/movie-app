{"version":3,"sources":["pages/MovieDetail.js","utils/FormatDuration.js"],"names":["MovieDetail","_movie$directors","_movie$mainActors","_movie$writers","_movie$genres","id","useParams","dispatch","useDispatch","movie","status","error","useSelector","state","movieDetail","useEffect","fetchMovieDetails","React","createElement","className","src","posterUrl","NO_IMAGE","alt","title","summary","rating","duration","match","slice","FormatDuration","datePublished","Date","toLocaleDateString","ratingValue","bestRating","directors","length","join","mainActors","writers","genres","map","genre","Link","to"],"mappings":"4NAOO,MAAMA,EAAcA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,GAAEC,GAAOC,cACTC,EAAWC,eACX,MAAEC,EAAK,OAAEC,EAAM,MAAEC,GAAUC,YAAaC,GAAUA,EAAMC,aAQ9D,OANAC,oBAAU,KACFV,GACAE,EAASS,YAAkBX,KAEhC,CAACA,EAAIE,IAEO,YAAXG,EAA6BO,IAAAC,cAAA,SAAG,cACrB,WAAXR,EAA4BO,IAAAC,cAAA,SAAG,UAAQP,GAGvCM,IAAAC,cAAA,OAAKC,UAAU,aACVV,GACGQ,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,OAAKC,UAAU,WACfF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,OAAKE,IAAKX,EAAMY,WAAaC,IAAUH,UAAU,0BAA0BI,IAAKd,EAAMe,OAAS,wBAEnGP,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,MAAIC,UAAU,cAAcV,EAAMe,OAAS,sBAC3CP,IAAAC,cAAA,KAAGC,UAAU,aAAaV,EAAMgB,SAAW,wBAC3CR,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,WAAgB,IAAET,EAAMiB,QAAU,uBACnET,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,aAAkB,IAAET,EAAMkB,SClCxDA,KAE3B,IAAKA,GAAgC,kBAAbA,EACpB,MAAO,QAGX,MAAMC,EAAQD,EAASC,MAAM,oBAE7B,IAAKA,EACD,MAAO,QAKX,MAAO,GAFOA,EAAM,GAAKA,EAAM,GAAGC,MAAM,GAAI,GAAK,QACjCD,EAAM,GAAKA,EAAM,GAAGC,MAAM,GAAI,GAAK,QDqB2CC,CAAerB,EAAMkB,UAAY,yBACvGV,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,iBAAsB,IAAET,EAAMsB,cAAgB,IAAIC,KAAKvB,EAAMsB,eAAeE,qBAAuB,6BACpIhB,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,iBAAsB,IAAET,EAAMyB,aAAe,kBAAkB,MAAIzB,EAAM0B,YAAc,kBACxHlB,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,cAAmB,KAAiB,QAAfjB,EAAAQ,EAAM2B,iBAAS,IAAAnC,OAAA,EAAfA,EAAiBoC,QAAS5B,EAAM2B,UAAUE,KAAK,MAAQ,0BAC7GrB,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,gBAAqB,KAAkB,QAAhBhB,EAAAO,EAAM8B,kBAAU,IAAArC,OAAA,EAAhBA,EAAkBmC,QAAS5B,EAAM8B,WAAWD,KAAK,MAAQ,4BACjHrB,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,YAAiB,KAAe,QAAbf,EAAAM,EAAM+B,eAAO,IAAArC,OAAA,EAAbA,EAAekC,QAAS5B,EAAM+B,QAAQF,KAAK,MAAQ,wBACvGrB,IAAAC,cAAA,KAAGC,UAAU,aAAYF,IAAAC,cAAA,cAAQ,WAAgB,KAAc,QAAZd,EAAAK,EAAMgC,cAAM,IAAArC,OAAA,EAAZA,EAAciC,QAAS5B,EAAMgC,OAAOC,IAAIC,GAASA,EAAMnB,OAAOc,KAAK,MAAQ,uBAC9HrB,IAAAC,cAAC0B,IAAI,CAACC,GAAI,IAAK1B,UAAU,mBAAkB,cAUxDnB","file":"static/js/4.9d710d86.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../redux/slices/movieDetailSlice';\nimport { FormatDuration } from '../utils/FormatDuration';\nimport { NO_IMAGE } from '../constants';\n\nexport const MovieDetail = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { movie, status, error } = useSelector((state) => state.movieDetail);\n\n    useEffect(() => {\n        if (id) {\n            dispatch(fetchMovieDetails(id));\n        }\n    }, [id, dispatch]);\n\n    if (status === 'loading') return <p>Loading...</p>;\n    if (status === 'failed') return <p>Error: {error}</p>;\n\n    return (\n        <div className=\"container\">\n            {movie && (\n                <div className=\"card\">\n                    <div className=\"row g-0\">\n                    <div className=\"col-md-4\">\n                        <img src={movie.posterUrl || NO_IMAGE} className=\"img-fluid rounded-start\" alt={movie.title || \"No title available\"} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{movie.title || \"No title available\"}</h5>\n                            <p className=\"card-text\">{movie.summary || \"No summary available\"}</p>\n                            <p className=\"card-text\"><strong>Rating:</strong> {movie.rating || \"No rating available\"}</p>\n                            <p className=\"card-text\"><strong>Duration:</strong> {movie.duration ? FormatDuration(movie.duration) : \"No duration available\"}</p>\n                            <p className=\"card-text\"><strong>Release Date:</strong> {movie.datePublished ? new Date(movie.datePublished).toLocaleDateString() : \"No release date available\"}</p>\n                            <p className=\"card-text\"><strong>Rating Value:</strong> {movie.ratingValue || \"No rating value\"} / {movie.bestRating || \"No best rating\"}</p>\n                            <p className=\"card-text\"><strong>Directors:</strong> {movie.directors?.length ? movie.directors.join(', ') : \"No directors available\"}</p>\n                            <p className=\"card-text\"><strong>Main Actors:</strong> {movie.mainActors?.length ? movie.mainActors.join(', ') : \"No main actors available\"}</p>\n                            <p className=\"card-text\"><strong>Writers:</strong> {movie.writers?.length ? movie.writers.join(', ') : \"No writers available\"}</p>\n                            <p className=\"card-text\"><strong>Genres:</strong> {movie.genres?.length ? movie.genres.map(genre => genre.title).join(', ') : \"No genres available\"}</p>\n                            <Link to={`/`} className=\"btn btn-primary\">Home</Link>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MovieDetail;\n","export const FormatDuration = (duration) => {\n\n    if (!duration || typeof duration !== 'string') {\n        return '0h 0m'; \n    }\n    \n    const match = duration.match(/PT(\\d+H)?(\\d+M)?/);\n\n    if (!match) {\n        return '0h 0m';\n    }\n\n    const hours = match[1] ? match[1].slice(0, -1) : \"0\";   \n    const minutes = match[2] ? match[2].slice(0, -1) : \"0\"; \n    return `${hours}h ${minutes}m`;\n};\n"],"sourceRoot":""}