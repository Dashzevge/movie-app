{"version":3,"sources":["components/Movie.js","components/Movies.js","components/SearchFilter.js","components/Pagination.js","pages/Home.js"],"names":["Movie","_ref","movie","React","createElement","className","src","posterUrl","NO_IMAGE","alt","title","rating","Link","to","id","Movies","movies","map","key","SearchFilter","_genres$find","genres","selectedGenre","search","onSearchChange","onGenreSelect","type","data-bs-toggle","aria-expanded","find","g","onClick","genre","aria-label","value","onChange","Pagination","currentPage","totalPages","onPageChange","onPageSizeChange","htmlFor","disabled","Home","dispatch","useDispatch","useSelector","state","movieFilters","pageSize","searchTerm","useEffect","async","response","getAllMovies","API_ENDPOINTS","MOVIES","setMovies","data","setTotalPages","error","console","fetchMovies","getAllGenres","GENRES","setGenres","fetchAllGenres","event","setSearchTerm","target","genreId","setSelectedGenre","page","setPage","setPageSize","Number"],"mappings":"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","file":"static/js/3.46d9ae79.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NO_IMAGE } from '../constants';\n\nexport const Movie = ({ movie }) => {\n    return (\n        <div className=\"card\">\n            <img src={movie.posterUrl || NO_IMAGE} className=\"card-img-top\" alt={movie.title} />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{movie.title}</h5>\n                <p className=\"card-text\">\n                    <small className=\"text-muted\">Rate: {movie.rating}</small>\n                </p>\n                <Link to={`/movie/${movie.id}`} className=\"btn btn-primary\">Read more</Link>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Movie } from './Movie';\n\n\nexport const Movies = ({ movies }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {movies.map((movie) => (\n                    <div key={movie.id} className=\"col-md-3 mb-3\">\n                        <Movie movie={movie} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","\nimport React from 'react';\nexport const SearchFilter = ({ genres, selectedGenre, search, onSearchChange, onGenreSelect }) => {\n    return (\n        <div className=\"row justify-content-md-center\">   \n            <div className=\"input-group mb-3\" id=\"buttonGroup\">\n                <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    {selectedGenre ? genres.find(g => g.title === selectedGenre)?.title : 'All Genres'}\n                </button>\n                <ul className=\"dropdown-menu\">\n                    <li key=\"all\">\n                        <button className=\"dropdown-item\" onClick={() => onGenreSelect('')}>\n                            All Genres\n                        </button>\n                    </li>\n                    {genres.map((genre) => (\n                        <li key={genre.id}>\n                            <button className=\"dropdown-item\" onClick={() => onGenreSelect(genre.title)}>\n                                {genre.title}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n                <input \n                    type=\"search\" \n                    className=\"form-control\" \n                    aria-label=\"Text input with dropdown button\" \n                    value={search} \n                    onChange={onSearchChange} \n                />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange, onPageSizeChange }) => {\n    return (\n        <div className=\"row md-3\">\n            <div className=\"col d-flex justify-content-between\">\n                <div>\n                    <label htmlFor=\"pageSize\" className=\"form-label\">Page Size:</label>\n                    <select id=\"pageSize\" className=\"form-select\" onChange={onPageSizeChange}>    \n                        <option value={25}>25</option>\n                        <option value={30}>30</option>\n                        <option value={50}>50</option>\n                    </select>\n                </div>\n                <div>\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        onClick={() => onPageChange(currentPage - 1)}\n                        disabled={currentPage === 1}\n                    >\n                        Previous\n                    </button>\n                    <span className=\"mx-2\">Page {currentPage} of {totalPages}</span>\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        onClick={() => onPageChange(currentPage + 1)}\n                        disabled={currentPage === totalPages}\n                    >\n                        Next\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMovies, getAllGenres } from '../services/movieApi';\nimport { Movies } from '../components/Movies';\nimport { SearchFilter } from '../components/SearchFilter';\nimport { Pagination } from '../components/Pagination';\nimport { setMovies } from '../redux/slices/moviesSlice';\nimport { setGenres, setPage, setPageSize, setTotalPages, setSearchTerm, setSelectedGenre } from '../redux/slices/movieFilterSlice'; \nimport { API_ENDPOINTS } from '../constants';\n//import { useDebounce } from 'use-debounce';\n\nexport const Home = () => {\n    const dispatch = useDispatch();\n    const movies = useSelector((state) => state.movies); \n    const genres = useSelector((state) => state.movieFilters.genres);\n    const { currentPage, pageSize, totalPages } = useSelector((state) => state.movieFilters);\n    const { searchTerm, selectedGenre } = useSelector((state) => state.movieFilters);\n    //const [debouncedSearchTerm] = useDebounce(searchTerm, 500); \n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const response = await getAllMovies(API_ENDPOINTS.MOVIES, currentPage, pageSize, searchTerm, selectedGenre);\n                dispatch(setMovies(response.data));\n                dispatch(setTotalPages(response.totalPages));\n            } catch (error) {\n                console.error('Failed to getAllMovies', error);\n            }\n        };\n\n        fetchMovies();\n    }, [currentPage, pageSize, searchTerm, selectedGenre, dispatch]);\n\n    useEffect(() => {\n        const fetchAllGenres = async () => {\n            try {\n                const response = await getAllGenres(API_ENDPOINTS.GENRES);\n                dispatch(setGenres(response.data));\n            } catch (error) {\n                console.error('Failed to getAllGenres', error);\n            }\n        };\n\n        fetchAllGenres();\n    }, [dispatch]);\n\n    const handleSearchChange = (event) => {\n        dispatch(setSearchTerm(event.target.value));\n    };\n\n    const handleGenreSelect = (genreId) => {\n        dispatch(setSelectedGenre(genreId));\n    };\n\n    const handlePageChange = (page) => {\n        dispatch(setPage(page));\n    };\n\n    const handlePageSizeChange = (event) => {\n        dispatch(setPageSize(Number(event.target.value)));\n    };\n\n    return (\n        <div className=\"container\">\n            <SearchFilter\n                genres={genres}\n                selectedGenre={selectedGenre}\n                search={searchTerm}\n                onSearchChange={handleSearchChange}\n                onGenreSelect={handleGenreSelect}\n            />\n            <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPageChange={handlePageChange}\n                onPageSizeChange={handlePageSizeChange}\n            />\n            <div className=\"row\">\n                <Movies movies={movies} />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}